// Mocks generated by Mockito 5.4.3 from annotations
// in nasapic/test/domain/use_cases/search_picture_by_title_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nasapic/features/picture_of_the_day/domain/entities/picture_item.dart'
    as _i6;
import 'package:nasapic/features/picture_of_the_day/domain/repositories/i_picture_of_the_day_repository.dart'
    as _i3;
import 'package:nasapic/features/picture_of_the_day/erros/picture_failure.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IPictureOfTheDayRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPictureOfTheDayRepository extends _i1.Mock
    implements _i3.IPictureOfTheDayRepository {
  @override
  _i4.Future<_i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>
      getAllPictures() => (super.noSuchMethod(
            Invocation.method(
              #getAllPictures,
              [],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
                _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
              this,
              Invocation.method(
                #getAllPictures,
                [],
              ),
            )),
            returnValueForMissingStub: _i4.Future<
                    _i2
                    .Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
                _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
              this,
              Invocation.method(
                #getAllPictures,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>);

  @override
  _i4.Future<
      _i2
      .Either<_i5.PictureFailure, List<_i6.PictureItem>>> searchPictureByTitle(
          String? title) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPictureByTitle,
          [title],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
            _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
          this,
          Invocation.method(
            #searchPictureByTitle,
            [title],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
            _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
          this,
          Invocation.method(
            #searchPictureByTitle,
            [title],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>);

  @override
  _i4.Future<
      _i2
      .Either<_i5.PictureFailure, List<_i6.PictureItem>>> searchPictureByDate(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchPictureByDate,
          [date],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
            _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
          this,
          Invocation.method(
            #searchPictureByDate,
            [date],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>.value(
            _FakeEither_0<_i5.PictureFailure, List<_i6.PictureItem>>(
          this,
          Invocation.method(
            #searchPictureByDate,
            [date],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.PictureFailure, List<_i6.PictureItem>>>);
}
