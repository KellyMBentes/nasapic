// Mocks generated by Mockito 5.4.3 from annotations
// in nasapic/test/features/picture_of_the_day/presentation/picture_of_the_day_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nasapic/core/usecases/usecase.dart' as _i11;
import 'package:nasapic/features/picture_of_the_day/domain/entities/picture_item.dart'
    as _i7;
import 'package:nasapic/features/picture_of_the_day/domain/repositories/i_picture_of_the_day_repository.dart'
    as _i2;
import 'package:nasapic/features/picture_of_the_day/domain/use_cases/clean_cache.dart'
    as _i10;
import 'package:nasapic/features/picture_of_the_day/domain/use_cases/get_all_pictures.dart'
    as _i4;
import 'package:nasapic/features/picture_of_the_day/domain/use_cases/search_picture_by_date.dart'
    as _i8;
import 'package:nasapic/features/picture_of_the_day/domain/use_cases/search_picture_by_title.dart'
    as _i9;
import 'package:nasapic/features/picture_of_the_day/erros/picture_failure.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIPictureOfTheDayRepository_0 extends _i1.SmartFake
    implements _i2.IPictureOfTheDayRepository {
  _FakeIPictureOfTheDayRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetAllPictures].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllPictures extends _i1.Mock implements _i4.GetAllPictures {
  @override
  _i2.IPictureOfTheDayRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.IPictureOfTheDayRepository);

  @override
  _i5.Future<_i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>> call(
          _i4.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>.value(
            _FakeEither_1<_i6.PictureFailure, List<_i7.PictureItem>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>.value(
            _FakeEither_1<_i6.PictureFailure, List<_i7.PictureItem>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>);
}

/// A class which mocks [SearchPicturesByDate].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchPicturesByDate extends _i1.Mock
    implements _i8.SearchPicturesByDate {
  @override
  _i2.IPictureOfTheDayRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.IPictureOfTheDayRepository);

  @override
  _i5.Future<_i3.Either<_i6.PictureFailure, _i7.PictureItem>> call(
          _i8.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.PictureFailure, _i7.PictureItem>>.value(
                _FakeEither_1<_i6.PictureFailure, _i7.PictureItem>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.PictureFailure, _i7.PictureItem>>.value(
                _FakeEither_1<_i6.PictureFailure, _i7.PictureItem>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.PictureFailure, _i7.PictureItem>>);
}

/// A class which mocks [SearchPicturesByTitle].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchPicturesByTitle extends _i1.Mock
    implements _i9.SearchPicturesByTitle {
  @override
  _i5.Future<_i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>> call(
          _i9.Params? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<
                _i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>.value(
            _FakeEither_1<_i6.PictureFailure, List<_i7.PictureItem>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>.value(
            _FakeEither_1<_i6.PictureFailure, List<_i7.PictureItem>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.PictureFailure, List<_i7.PictureItem>>>);
}

/// A class which mocks [CleanCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockCleanCache extends _i1.Mock implements _i10.CleanCache {
  @override
  _i2.IPictureOfTheDayRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeIPictureOfTheDayRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.IPictureOfTheDayRepository);

  @override
  _i5.Future<_i3.Either<_i6.PictureFailure, void>> call(
          _i11.NoParams? noParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [noParams],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.PictureFailure, void>>.value(
            _FakeEither_1<_i6.PictureFailure, void>(
          this,
          Invocation.method(
            #call,
            [noParams],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.PictureFailure, void>>.value(
                _FakeEither_1<_i6.PictureFailure, void>(
          this,
          Invocation.method(
            #call,
            [noParams],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.PictureFailure, void>>);
}
